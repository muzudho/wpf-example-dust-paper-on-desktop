<!--
    タイトルバー、枠線、背景色を消すために
    WindowStyle="None" AllowsTransparency="True" Background="#00000000"
    の３つを付けました。
    
    また、枠が消えたので、ウィンドウの端を持ってリサイズできる機能も、
    ResizeMode="NoResize" を付けることで無効にしました。 
-->
<Window x:Class="WpfExampleDustPaperOnDesktop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfExampleDustPaperOnDesktop"
        mc:Ignorable="d"
        Title="MainWindow" Width="300" Height="300"
        WindowStyle="None" AllowsTransparency="True" Background="#00000000"
        ResizeMode="NoResize">

    <!--
        xmlns:viewModels="clr-namespace:WpfExampleDustPaperOnDesktop.ViewModels"
    <Window.DataContext>
        <viewModels:MainWindowViewModel/>
    </Window.DataContext>
    -->

    <Window.Resources>
        <ControlTemplate x:Key="normalButton" TargetType="Button">

            <!-- ニュートラル状態でのボタンのルックスです -->
            <Grid>
                <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                           Stroke="{TemplateBinding Foreground}" StrokeThickness="0.5"
                                            Fill="{TemplateBinding Background}"/>
                <Label Content="{TemplateBinding Content}"/>
            </Grid>

            <ControlTemplate.Triggers>
                <!-- ウィンドウのサイズがニュートラルな状態のとき、[元のサイズに戻す]ボタンの場所を無くします -->
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                             Value="Normal">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </ControlTemplate.Triggers>

        </ControlTemplate>
        <ControlTemplate x:Key="maximizedButton" TargetType="Button">

            <!-- ニュートラル状態でのボタンのルックスです -->
            <Grid>
                <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                           Stroke="{TemplateBinding Foreground}" StrokeThickness="0.5"
                                            Fill="{TemplateBinding Background}"/>
                <Label Content="{TemplateBinding Content}"/>
            </Grid>

            <ControlTemplate.Triggers>
                <!-- ウィンドウのサイズが最大の状態のとき、[元のサイズに戻す]ボタンの場所を無くします -->
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                             Value="Maximized">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </ControlTemplate.Triggers>

        </ControlTemplate>
    </Window.Resources>
    
    <!--
        くしゃくしゃになった ちり紙 を表現したいですが、
        大変なので 正方形２つ、丸１つを描画します
    -->
    <Grid>
        <!-- 2行2列のグリッド -->
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        
        <!-- 左上に四角 -->
        <Rectangle Width="140" Height="140" Fill="WhiteSmoke"
                   MouseDown="Application_MouseDown" MouseUp="Application_MouseUp"/>

        <!-- 右上に丸 -->
        <Ellipse Grid.Column="1" Width="140" Height="140" Fill="PapayaWhip"
                 MouseDown="Application_MouseDown" MouseUp="Application_MouseUp"/>

        <!-- 下段に長方形 -->
        <Rectangle Grid.Row="1" Grid.ColumnSpan="2" Width="200" Height="140" Fill="AliceBlue"
                   MouseDown="Application_MouseDown" MouseUp="Application_MouseUp"/>

        <!-- ちらしっぽいメッセージを書きましょう -->
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                   TextAlignment="Center"
                   FontSize="20" IsHitTestVisible="False">ここに<LineBreak/>紙を貼るな！</TextBlock>
        <TextBlock Grid.Column="1"
                   HorizontalAlignment="Center" VerticalAlignment="Center"
                   TextAlignment="Center"
                   FontSize="20" IsHitTestVisible="False">へ　へ<LineBreak/>の　の<LineBreak/>も<LineBreak/>へ</TextBlock>
        <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Width="200" Height="140"
                    IsHitTestVisible="False">
            <TextBlock FontSize="20" Text="6 + 7 = 15" TextDecorations="Strikethrough"/>
            <TextBlock FontSize="20">6 + 7 = 13<LineBreak/>13 + 3 = 16</TextBlock>
        </StackPanel>

        <!-- ここにボタンを並べてください -->
        <Grid Grid.Row="1" Grid.ColumnSpan="2" Width="240" Height="140">
            <!-- 2行0列のグリッド -->
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- 0行目は空きスペース -->
            <!-- 1行目 ここにボタンを並べてください -->
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Width="40" Height="30"
                    Content="最小" Click="MinimizedButton_Click"/>
                
                <!-- 元のサイズに戻すボタンです -->
                <Button Width="80" Height="30"
                    Content="元サイズ戻す" Click="NormalButton_Click" Template="{StaticResource normalButton}" />

                <!-- ウィンドウを最大化するボタンです -->
                <Button Width="40" Height="30"
                    Content="最大" Click="MaximizedButton_Click" Template="{StaticResource maximizedButton}"/>

                <Button Width="40" Height="30"
                    Content="閉じ" Click="CloseButton_Click"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
